public class Student {
	
	 int STUDENT_NO;
	 String STUDENT_NAME; 
	 Date STUDENT_DOB;
	 Date STUDENT_DOJ;
	 
	 public Student() {
	 super();
	 }
	 
	 public Student(int STUDENT_NO, String STUDENT_NAME ,Date STUDENT_DOB,Date  STUDENT_DOJ) {
	 super();
	 this.STUDENT_NO = STUDENT_NO;
	 this.STUDENT_NAME = STUDENT_NAME;
	 this.STUDENT_DOB=STUDENT_DOB;
	 this. STUDENT_DOJ= STUDENT_DOJ;
	 }
	 public int getNo() {
	 return STTUDENT_NO;
	 }
	 public void setNo(int STUDENT_NO) {
	 this.STUDENT_NO = STUDENT_NO;
	 }
	 public String getName() {
	 return STUDENT_NAME;
	 }
	 public void setName(String countryName) {
	 this.STUDENT_NAME = STUDENT_NAME;
	 }
	 public date getDOB() {
	 return STUDENT_DOB;
	 }
	 public void setDOB(date STUDENT_DOB) {
	 this.STUDENT_DOB = STUDENT_DOB;
	 } 
	 
	 public date getDOJ() {
		 return STUDENT_DOJ;
		 }
		 public void setDOJ(date STUDENT_DOJ) {
		 this.STUDENT_DOJ = STUDENT_DOJ;
		 }
	 
	}

	 

	


	 
	import java.util.List;
	 
	import javax.ws.rs.DELETE;
	import javax.ws.rs.GET;
	import javax.ws.rs.POST;
	import javax.ws.rs.PUT;
	import javax.ws.rs.Path;
	import javax.ws.rs.PathParam;
	import javax.ws.rs.Produces;
	import javax.ws.rs.core.MediaType;
	 
	
	 
	@Path("/student")
	public class StudentController {
	 
	 StudentService studentService=new StudentService();
	 
	    @GET
	    @Produces(MediaType.APPLICATION_JSON)
	 public List getStudent()
	 {
	 
	  List listOfstudents=studentService.getAllStudents();
	  return listOfstudents;
	 }
	 
	    @GET
	    @Path("/{id}")
	    @Produces(MediaType.APPLICATION_JSON)
	 public Student getStudentById(@PathParam("id") int id)
	 {
	  return studentService.getStudent(id);
	 }
	 
	    @POST
	    @Produces(MediaType.APPLICATION_JSON)
	 public Student addStudent(Country stud)
	 {
	  return stdentService.addStudent(stud);
	 }
	 
	    @PUT
	    @Produces(MediaType.APPLICATION_JSON)
	 public Student updateStudent(Student stud)
	 {
	  return studentService.updateStudent(stud);
	 
	 }
	 
	    @DELETE
	    @Path("/{id}")
	    @Produces(MediaType.APPLICATION_JSON)
	 public void deleteStudent(@PathParam("id") int id)
	 {
	   studentService.deleteStudent(id);
	 
	 }
	 
	}
	 
	

	
	
	 
	 
	import java.util.ArrayList;
	import java.util.HashMap;
	import java.util.List;
	 
	
	 
	
	public class StudentService {
	 
	 static HashMap<Integer,Student> StudentIdMap=getStudentIdMap();
	 
	 public StudentService() {
	  super();
	 
	  if(StudentIdMap==null)
	  {
	   StudentIdMap=new HashMap<Integer,Student>();
	  
	   Student stud1=new Student(1, "ritika",'12-09-1999','14-03-2009');
	   Student stud2=new Student(2, "tushar",'20--05-1998','15-04-2001');
	   Student stud3=new Student(3, "ram",'12-09-1999','13-04-2002');
	   Student stud4=new Student(4, "radha",'03-09-1999','02-09-1998');
	 
	   StudentIdMap.put(1,stud1);
	   StudentIdMap.put(4,stud4);
	   StudentIdMap.put(3,stud3);
	   StudentIdMap.put(2,stud2);
	  }
	 }
	 
	 public List getAllStudents()
	 {
	  List countries = new ArrayList(StudentIdMap.values());
	  return countries;
	 }
	 
	 public Student getStudent(int id)
	 {
		 Student std= StudentIdMap.get(id);
	  return std;
	 }
	 public  Student addStudent(Student std)
	 {
	  std.setNo(StudentIdMap.size()+1);
	  StudentIdMap.put(std.getNo(), std);
	  return std;
	 }
	 
	 public Student updateCountry(Student std)
	 {
	  if(std.getNo()<=0)
	   return null;
	  StudentIdMap.put(std.getNo(), std);
	  return std;
	 
	 }
	 public void deleteStudent(int id)
	 {
		 StudentIdMap.remove(id);
	 }
	 
	 public static HashMap<Integer, Student> getStudentIdMap() {
	  return StudentIdMap;
	 }
	}